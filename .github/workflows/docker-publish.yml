name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths-ignore:
      - "README.md"
      - "README_CN.md"
      - "docs/**"
      - "*.md"
      - ".gitignore"
      - ".mise.toml"
      - "mise.toml"
      - ".vscode/**"
      - ".idea/**"
      - "data/**"
      - "logs/**"
      - "*.log"
      - "*.txt"
      - ".env*"
      - "docker-compose.override.yml"
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
      tags:
        description: "Manually build and push docker image"

env:
  IMAGE_NAME: telegramail

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Verify Docker Hub credentials
        run: |
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "Error: DOCKER_USERNAME secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "Error: DOCKER_PASSWORD secret is not set"
            exit 1
          fi
          echo "Docker Hub credentials are configured"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          logout: false

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
